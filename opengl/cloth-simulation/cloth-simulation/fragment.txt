#version 330 core

out vec4 fragmentColor;
in vec3 norm;  
in vec3 pos;
in vec3 fragPos;
in vec2 texcord;


uniform sampler2D textureID;
uniform vec3 lightColor = vec3(1, 1, 1);
float lightIntensity = 1.0;
uniform vec3 lightPos = vec3(20, 0, 10);
vec3 color = vec3(1.0f, 1.0f, 1.0f);

void main(){
	vec3 newNorm = norm;	
	if(!gl_FrontFacing) {
		//newNorm = -norm;
	}

	vec3 lightDir = normalize(lightPos - pos);
	float diff = max(dot(newNorm, lightDir), 0.0f);
	
	vec3 diffuse = diff * lightColor;
	vec3 ambient = vec3(1,1,1)*0.5f;
	vec4 result =vec4(diffuse + ambient, 1.0f) * texture(textureID, texcord);

	fragmentColor = result;

}